Be: n eleme N, m eleme N,
    telepulesek eleme N[1..n, 1..m]
Ki: sorban_eredmeny eleme N[1..n]
Fv: Atlag: N[1..m] -> R, Atlag(telepules) =
    SZUMMA(i = 1..m, telepules[i]) / m

    MelegebbNapokSzama: N[1..n], MelegebbNapokSzama() =
    minden i eleme 1..n : eredmeny[i] =
    DARAB(j = 1..m, telepulesek[i][j] > Atlag(telepulesek[i]))

    FindMaxIndex: N, FindMaxIndex() =
    MAX(i = 1..n, eredmeny[i], eredmeny[i] != -1) es eredmeny[maxind] = -1 
Sa: eredmeny eleme N[1..n]
Ef: -
Uf: sorban_eredmeny = minden i eleme N[1..n] : sorban_eredmeny[i] = 
                      FindMaxIndex(eredmeny)

Összegzés:
e..u ~ 1..m
f(i) ~ telepules[i]
s ~ Atlag()

Megszámolás:
e..u ~ 1..m
T(i) ~ telepulesek[i][j] > Atlag(telepulesek[i])
db ~ MelegebbNapokSzama()

Feltételes maximumkeresés:
e..u ~ 1..n
f(i) ~ eredmeny[i]
T(i) ~ eredmeny[i] != -1
(maxert, maxind) = (FindMaxIndex(), maxind)